vocabulary V {
	type Color
	type Country
	color(Country, Color)
	different(Color, Color)
	neighbor(Country, Country)
}

theory T0:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T1:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T2:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T3:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & different(V1, V1) & (V0 ~= V2)) => false).
}

theory T4:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V2, V1) & (V0 ~= V2)) => false).
}

theory T5:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T6:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T7:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T8:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V2, V2) & (V0 ~= V2)) => false).
}

theory T9:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T10:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T11:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T12:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T13:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T14:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => neighbor(V0, V0)).
}

theory T15:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => color(V0, V1)).
}

theory T16:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => neighbor(V2, V0)).
}

theory T17:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => neighbor(V0, V2)).
}

theory T18:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => different(V1, V1)).
}

theory T19:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => color(V2, V1)).
}

theory T20:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V2)) => neighbor(V2, V2)).
}

theory T21:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T22:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & different(V1, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T23:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & color(V2, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T24:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T25:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T26:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T27:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T28:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T29:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T30:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T31:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T32:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T33:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T34:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T35:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T36:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T37:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T38:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T39:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T40:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T41:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T42:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & different(V1, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T43:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & color(V2, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T44:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T45:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T46:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T47:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T48:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T49:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T50:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T51:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T52:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T53:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T54:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T55:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T56:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T57:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T58:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T59:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T60:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T61:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T62:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T63:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T64:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T65:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T66:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T67:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T68:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T69:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T70:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T71:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T72:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T73:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T74:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T75:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T76:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T77:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T78:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T79:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T80:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T81:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T82:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T83:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T84:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T85:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T86:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T87:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T88:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T89:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T90:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T91:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T92:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T93:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T94:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T95:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T96:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T97:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T98:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T99:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T100:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T101:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T102:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T103:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T104:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T105:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T106:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T107:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T108:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T109:V {
	((color(V0, V1) & neighbor(V2, V0) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T110:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T111:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T112:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T113:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T114:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T115:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T116:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T117:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T118:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T119:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T120:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T121:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T122:V {
	((color(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T123:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T124:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T125:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T126:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T127:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T128:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T129:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T130:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T131:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T132:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T133:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T134:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T135:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T136:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T137:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T138:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T139:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T140:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T141:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T142:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T143:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T144:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T145:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T146:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T147:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T148:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T149:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T150:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T151:V {
	((color(V0, V1) & neighbor(V2, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T152:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V0, V1))).
}

theory T153:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T154:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T155:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | different(V1, V1))).
}

theory T156:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V2, V1))).
}

theory T157:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T158:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (different(V1, V1) | color(V2, V1))).
}

theory T159:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (different(V1, V1) | neighbor(V2, V2))).
}

theory T160:V {
	((color(V0, V1) & neighbor(V2, V0) & (V0 ~= V2)) => (color(V2, V1) | neighbor(V2, V2))).
}

theory T161:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T162:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & different(V1, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T163:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & color(V2, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T164:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T165:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T166:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T167:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T168:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T169:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T170:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T171:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T172:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T173:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T174:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T175:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T176:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T177:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T178:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T179:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T180:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T181:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T182:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & different(V1, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T183:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & color(V2, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T184:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T185:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T186:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T187:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T188:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T189:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T190:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T191:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T192:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T193:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T194:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T195:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T196:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T197:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T198:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T199:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T200:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T201:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T202:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & neighbor(V2, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T203:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T204:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T205:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T206:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T207:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T208:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T209:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T210:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T211:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T212:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T213:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T214:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T215:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T216:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T217:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T218:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V3, V1) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T219:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T220:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T221:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T222:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T223:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T224:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T225:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T226:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T227:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T228:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T229:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T230:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T231:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T232:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T233:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T234:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T235:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T236:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T237:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T238:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T239:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T240:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T241:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T242:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T243:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T244:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T245:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T246:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T247:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T248:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T249:V {
	((color(V0, V1) & neighbor(V0, V2) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T250:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T251:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T252:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T253:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T254:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T255:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T256:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T257:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T258:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T259:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T260:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T261:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T262:V {
	((color(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T263:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T264:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T265:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T266:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T267:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T268:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T269:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T270:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T271:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T272:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T273:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T274:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T275:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T276:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T277:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T278:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T279:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T280:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T281:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T282:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T283:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T284:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T285:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T286:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T287:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T288:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T289:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T290:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T291:V {
	((color(V0, V1) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T292:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V0, V1))).
}

theory T293:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T294:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T295:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | different(V1, V1))).
}

theory T296:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V2, V1))).
}

theory T297:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T298:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (different(V1, V1) | color(V2, V1))).
}

theory T299:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (different(V1, V1) | neighbor(V2, V2))).
}

theory T300:V {
	((color(V0, V1) & neighbor(V0, V2) & (V0 ~= V2)) => (color(V2, V1) | neighbor(V2, V2))).
}

theory T301:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T302:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T303:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T304:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T305:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T306:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T307:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T308:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T309:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T310:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T311:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T312:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T313:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T314:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T315:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T316:V {
	((color(V0, V1) & color(V2, V1) & different(V3, V1) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T317:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & neighbor(V2, V2) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T318:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & color(V2, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T319:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & different(V3, V3) & (V0 ~= V2) & (V1 ~= V3)) => false).
}

theory T320:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T321:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V1)).
}

theory T322:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V0)).
}

theory T323:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V0, V2)).
}

theory T324:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V0, V3)).
}

theory T325:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V1)).
}

theory T326:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V1)).
}

theory T327:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V1)).
}

theory T328:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V1, V3)).
}

theory T329:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => neighbor(V2, V2)).
}

theory T330:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => color(V2, V3)).
}

theory T331:V {
	((color(V0, V1) & color(V2, V1) & different(V1, V3) & (V0 ~= V2) & (V1 ~= V3)) => different(V3, V3)).
}

theory T332:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T333:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T334:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T335:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T336:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T337:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T338:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T339:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T340:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T341:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T342:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T343:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T344:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T345:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T346:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T347:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & neighbor(V3, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => false).
}

theory T348:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T349:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V0, V1)).
}

theory T350:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V0)).
}

theory T351:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V2)).
}

theory T352:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V0)).
}

theory T353:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V0, V3)).
}

theory T354:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => different(V1, V1)).
}

theory T355:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V2, V1)).
}

theory T356:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => color(V3, V1)).
}

theory T357:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T358:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T359:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T360:V {
	((color(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V2) & (V0 ~= V3) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T361:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V0, V1))).
}

theory T362:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T363:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T364:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | different(V1, V1))).
}

theory T365:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | color(V2, V1))).
}

theory T366:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T367:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V2, V0) | neighbor(V0, V2))).
}

theory T368:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V2, V0) | different(V1, V1))).
}

theory T369:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V2, V0) | color(V2, V1))).
}

theory T370:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V2, V0) | neighbor(V2, V2))).
}

theory T371:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V2) | different(V1, V1))).
}

theory T372:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V2) | color(V2, V1))).
}

theory T373:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (neighbor(V0, V2) | neighbor(V2, V2))).
}

theory T374:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (different(V1, V1) | color(V2, V1))).
}

theory T375:V {
	((color(V0, V1) & color(V2, V1) & (V0 ~= V2)) => (different(V1, V1) | neighbor(V2, V2))).
}

theory T376:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T377:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V3, V1) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T378:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V1, V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T379:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V2, V2) & (V1 ~= V2)) => false).
}

theory T380:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T381:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V3, V2) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T382:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V2, V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T383:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & different(V3, V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T384:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & neighbor(V3, V3) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T385:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T386:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => color(V0, V1)).
}

theory T387:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => color(V0, V2)).
}

theory T388:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => different(V1, V1)).
}

theory T389:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => different(V2, V1)).
}

theory T390:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => different(V1, V2)).
}

theory T391:V {
	((color(V0, V1) & different(V2, V1) & different(V1, V2) & (V1 ~= V2)) => different(V2, V2)).
}

theory T392:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & different(V2, V2) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T393:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T394:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T395:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T396:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V1)).
}

theory T397:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V2)).
}

theory T398:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V0)).
}

theory T399:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V3)).
}

theory T400:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V1)).
}

theory T401:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V1)).
}

theory T402:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V2)).
}

theory T403:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V1)).
}

theory T404:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V2)).
}

theory T405:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V2)).
}

theory T406:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V3)).
}

theory T407:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & neighbor(V3, V3) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T408:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T409:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V1)).
}

theory T410:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V2)).
}

theory T411:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V0)).
}

theory T412:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V3)).
}

theory T413:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V1)).
}

theory T414:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V1)).
}

theory T415:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V2)).
}

theory T416:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V1)).
}

theory T417:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V2)).
}

theory T418:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V2)).
}

theory T419:V {
	((color(V0, V1) & different(V2, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V3)).
}

theory T420:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | color(V0, V1))).
}

theory T421:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | color(V0, V2))).
}

theory T422:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V1, V1))).
}

theory T423:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V2, V1))).
}

theory T424:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V1, V2))).
}

theory T425:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V2, V2))).
}

theory T426:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (color(V0, V2) | different(V1, V1))).
}

theory T427:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (color(V0, V2) | different(V2, V1))).
}

theory T428:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (color(V0, V2) | different(V1, V2))).
}

theory T429:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (color(V0, V2) | different(V2, V2))).
}

theory T430:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (different(V1, V1) | different(V2, V1))).
}

theory T431:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (different(V1, V1) | different(V1, V2))).
}

theory T432:V {
	((color(V0, V1) & different(V2, V1) & (V1 ~= V2)) => (different(V1, V1) | different(V2, V2))).
}

theory T433:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & different(V2, V2) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T434:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T435:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T436:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T437:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V1)).
}

theory T438:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V2)).
}

theory T439:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V0)).
}

theory T440:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V3)).
}

theory T441:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V1)).
}

theory T442:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V1)).
}

theory T443:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V2)).
}

theory T444:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V1)).
}

theory T445:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V2)).
}

theory T446:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V2)).
}

theory T447:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V1) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V3)).
}

theory T448:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & neighbor(V3, V3) & (V0 ~= V3) & (V1 ~= V2)) => false).
}

theory T449:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T450:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V1)).
}

theory T451:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V0, V2)).
}

theory T452:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V0)).
}

theory T453:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V0, V3)).
}

theory T454:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V1)).
}

theory T455:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V1)).
}

theory T456:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V1, V2)).
}

theory T457:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V1)).
}

theory T458:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => different(V2, V2)).
}

theory T459:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => color(V3, V2)).
}

theory T460:V {
	((color(V0, V1) & different(V1, V2) & color(V3, V2) & (V0 ~= V3) & (V1 ~= V2)) => neighbor(V3, V3)).
}

theory T461:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | color(V0, V1))).
}

theory T462:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | color(V0, V2))).
}

theory T463:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V1, V1))).
}

theory T464:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V2, V1))).
}

theory T465:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V1, V2))).
}

theory T466:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (neighbor(V0, V0) | different(V2, V2))).
}

theory T467:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (color(V0, V2) | different(V1, V1))).
}

theory T468:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (color(V0, V2) | different(V2, V1))).
}

theory T469:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (color(V0, V2) | different(V1, V2))).
}

theory T470:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (color(V0, V2) | different(V2, V2))).
}

theory T471:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (different(V1, V1) | different(V2, V1))).
}

theory T472:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (different(V1, V1) | different(V1, V2))).
}

theory T473:V {
	((color(V0, V1) & different(V1, V2) & (V1 ~= V2)) => (different(V1, V1) | different(V2, V2))).
}

theory T474:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & different(V1, V1) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T475:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & color(V2, V1) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T476:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T477:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & neighbor(V2, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T478:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T479:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T480:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T481:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T482:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T483:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T484:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T485:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T486:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T487:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T488:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T489:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T490:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T491:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T492:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V0) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T493:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & neighbor(V2, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T494:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T495:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T496:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T497:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T498:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T499:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T500:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T501:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T502:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T503:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T504:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T505:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T506:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T507:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T508:V {
	((different(V0, V1) & color(V2, V0) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T509:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T510:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T511:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T512:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T513:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T514:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T515:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T516:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T517:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T518:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T519:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T520:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T521:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T522:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T523:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T524:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T525:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T526:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T527:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T528:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T529:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T530:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T531:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T532:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T533:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T534:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T535:V {
	((different(V0, V1) & color(V2, V0) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T536:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | different(V1, V0))).
}

theory T537:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | different(V0, V1))).
}

theory T538:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | color(V2, V0))).
}

theory T539:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | different(V1, V1))).
}

theory T540:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | color(V2, V1))).
}

theory T541:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V0, V0) | neighbor(V2, V2))).
}

theory T542:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V1, V1) | color(V2, V1))).
}

theory T543:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (different(V1, V1) | neighbor(V2, V2))).
}

theory T544:V {
	((different(V0, V1) & color(V2, V0) & (V0 ~= V1)) => (color(V2, V1) | neighbor(V2, V2))).
}

theory T545:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & neighbor(V2, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T546:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T547:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T548:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T549:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T550:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T551:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T552:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T553:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T554:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T555:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T556:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T557:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T558:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T559:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T560:V {
	((different(V0, V1) & color(V2, V1) & color(V3, V1) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T561:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T562:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T563:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T564:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T565:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T566:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T567:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T568:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T569:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T570:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T571:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T572:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T573:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T574:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T575:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & neighbor(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T576:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V0)).
}

theory T577:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V0)).
}

theory T578:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V0, V1)).
}

theory T579:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V0)).
}

theory T580:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V0)).
}

theory T581:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V1, V1)).
}

theory T582:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V2, V1)).
}

theory T583:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V3, V1)).
}

theory T584:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V2)).
}

theory T585:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V2)).
}

theory T586:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V2, V3)).
}

theory T587:V {
	((different(V0, V1) & color(V2, V1) & neighbor(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V3, V3)).
}

theory T588:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | different(V1, V0))).
}

theory T589:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | different(V0, V1))).
}

theory T590:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | color(V2, V0))).
}

theory T591:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | different(V1, V1))).
}

theory T592:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | color(V2, V1))).
}

theory T593:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V0, V0) | neighbor(V2, V2))).
}

theory T594:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (color(V2, V0) | different(V1, V1))).
}

theory T595:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (color(V2, V0) | color(V2, V1))).
}

theory T596:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (color(V2, V0) | neighbor(V2, V2))).
}

theory T597:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V1, V1) | color(V2, V1))).
}

theory T598:V {
	((different(V0, V1) & color(V2, V1) & (V0 ~= V1)) => (different(V1, V1) | neighbor(V2, V2))).
}

theory T599:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T600:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & neighbor(V1, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T601:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & color(V1, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T602:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T603:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T604:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T605:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T606:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T607:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T608:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T609:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T610:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T611:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T612:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T613:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T614:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T615:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T616:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T617:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T618:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T619:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T620:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & neighbor(V1, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T621:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & color(V1, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T622:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T623:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T624:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T625:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T626:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T627:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T628:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T629:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T630:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T631:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T632:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T633:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T634:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T635:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T636:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T637:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T638:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T639:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T640:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & different(V2, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T641:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T642:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T643:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & different(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T644:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T645:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V0)).
}

theory T646:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V1)).
}

theory T647:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V2)).
}

theory T648:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V3)).
}

theory T649:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V1)).
}

theory T650:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V2)).
}

theory T651:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V3)).
}

theory T652:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V2)).
}

theory T653:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V2)).
}

theory T654:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V3)).
}

theory T655:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V3)).
}

theory T656:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T657:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T658:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T659:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T660:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T661:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T662:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T663:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T664:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T665:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T666:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T667:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T668:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T669:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T670:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T671:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T672:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T673:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T674:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T675:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T676:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T677:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T678:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T679:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T680:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T681:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T682:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T683:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T684:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T685:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T686:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T687:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T688:V {
	((neighbor(V0, V1) & color(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T689:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T690:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T691:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T692:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T693:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T694:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T695:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T696:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T697:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T698:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T699:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T700:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T701:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T702:V {
	((neighbor(V0, V1) & color(V0, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T703:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T704:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & different(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T705:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T706:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V0)).
}

theory T707:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V1)).
}

theory T708:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V2)).
}

theory T709:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V3)).
}

theory T710:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V1)).
}

theory T711:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V2)).
}

theory T712:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V3)).
}

theory T713:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V2)).
}

theory T714:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V2)).
}

theory T715:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V3)).
}

theory T716:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V3)).
}

theory T717:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T718:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T719:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V0)).
}

theory T720:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V1)).
}

theory T721:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V2)).
}

theory T722:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V3)).
}

theory T723:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V1)).
}

theory T724:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V2)).
}

theory T725:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V3)).
}

theory T726:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V2)).
}

theory T727:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V2)).
}

theory T728:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V3)).
}

theory T729:V {
	((neighbor(V0, V1) & color(V0, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V3)).
}

theory T730:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T731:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T732:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | color(V0, V2))).
}

theory T733:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T734:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | color(V1, V2))).
}

theory T735:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | different(V2, V2))).
}

theory T736:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V1, V1) | color(V1, V2))).
}

theory T737:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (neighbor(V1, V1) | different(V2, V2))).
}

theory T738:V {
	((neighbor(V0, V1) & color(V0, V2) & (V0 ~= V1)) => (color(V1, V2) | different(V2, V2))).
}

theory T739:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T740:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V0) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T741:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T742:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V1, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T743:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T744:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T745:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T746:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T747:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T748:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T749:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T750:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V2) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T751:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T752:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T753:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T754:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T755:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T756:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T757:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T758:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T759:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T760:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T761:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T762:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T763:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & neighbor(V1, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T764:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T765:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T766:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T767:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T768:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T769:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T770:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T771:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T772:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T773:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T774:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T775:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T776:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T777:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T778:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T779:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T780:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T781:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T782:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T783:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T784:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T785:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T786:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T787:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T788:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T789:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T790:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T791:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T792:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T793:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T794:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T795:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T796:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T797:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T798:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T799:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T800:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T801:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T802:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T803:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T804:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T805:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T806:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T807:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T808:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T809:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T810:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T811:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T812:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T813:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T814:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T815:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T816:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T817:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T818:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V1))).
}

theory T819:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V2))).
}

theory T820:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T821:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V1))).
}

theory T822:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V1, V2))).
}

theory T823:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V2))).
}

theory T824:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V1) | neighbor(V1, V2))).
}

theory T825:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V1) | neighbor(V2, V2))).
}

theory T826:V {
	((neighbor(V0, V1) & neighbor(V2, V0) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V2) | neighbor(V2, V2))).
}

theory T827:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & neighbor(V1, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T828:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T829:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T830:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T831:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T832:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T833:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T834:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T835:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T836:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T837:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T838:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T839:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T840:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T841:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T842:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T843:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T844:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T845:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T846:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V0, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T847:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T848:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T849:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T850:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T851:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T852:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T853:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T854:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T855:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T856:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T857:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T858:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T859:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T860:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T861:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T862:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T863:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T864:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T865:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T866:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T867:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T868:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T869:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T870:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T871:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T872:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T873:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T874:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T875:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T876:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T877:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T878:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T879:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T880:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T881:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T882:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V1))).
}

theory T883:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V2))).
}

theory T884:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T885:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V1))).
}

theory T886:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V1, V2))).
}

theory T887:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V2))).
}

theory T888:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V1) | neighbor(V1, V2))).
}

theory T889:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V1) | neighbor(V2, V2))).
}

theory T890:V {
	((neighbor(V0, V1) & neighbor(V0, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V2) | neighbor(V2, V2))).
}

theory T891:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T892:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T893:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T894:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T895:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T896:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T897:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T898:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T899:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T900:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T901:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T902:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T903:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T904:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T905:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T906:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T907:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T908:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & different(V2, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T909:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T910:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T911:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T912:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T913:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T914:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T915:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T916:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T917:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T918:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T919:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T920:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T921:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T922:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T923:V {
	((neighbor(V0, V1) & color(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T924:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => false).
}

theory T925:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V0)).
}

theory T926:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V0)).
}

theory T927:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V1)).
}

theory T928:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V0, V2)).
}

theory T929:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V0)).
}

theory T930:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V0, V3)).
}

theory T931:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V1)).
}

theory T932:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V1, V2)).
}

theory T933:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V1)).
}

theory T934:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V1, V3)).
}

theory T935:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => different(V2, V2)).
}

theory T936:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => color(V3, V2)).
}

theory T937:V {
	((neighbor(V0, V1) & color(V1, V2) & color(V3, V2) & (V0 ~= V1) & (V0 ~= V3) & (V1 ~= V3)) => neighbor(V3, V3)).
}

theory T938:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T939:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & different(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T940:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T941:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V0)).
}

theory T942:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V1)).
}

theory T943:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V2)).
}

theory T944:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V3)).
}

theory T945:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V1)).
}

theory T946:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V2)).
}

theory T947:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V3)).
}

theory T948:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V2)).
}

theory T949:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V2)).
}

theory T950:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V3)).
}

theory T951:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V3, V2) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V3)).
}

theory T952:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V2 ~= V3)) => false).
}

theory T953:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V0)).
}

theory T954:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V0)).
}

theory T955:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V0, V1)).
}

theory T956:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V2)).
}

theory T957:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V0, V3)).
}

theory T958:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => neighbor(V1, V1)).
}

theory T959:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V2)).
}

theory T960:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => color(V1, V3)).
}

theory T961:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V2)).
}

theory T962:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V2)).
}

theory T963:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V2, V3)).
}

theory T964:V {
	((neighbor(V0, V1) & color(V1, V2) & different(V2, V3) & (V0 ~= V1) & (V2 ~= V3)) => different(V3, V3)).
}

theory T965:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T966:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T967:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | color(V0, V2))).
}

theory T968:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T969:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | color(V1, V2))).
}

theory T970:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V0, V0) | different(V2, V2))).
}

theory T971:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (color(V0, V2) | neighbor(V1, V1))).
}

theory T972:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (color(V0, V2) | color(V1, V2))).
}

theory T973:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (color(V0, V2) | different(V2, V2))).
}

theory T974:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V1, V1) | color(V1, V2))).
}

theory T975:V {
	((neighbor(V0, V1) & color(V1, V2) & (V0 ~= V1)) => (neighbor(V1, V1) | different(V2, V2))).
}

theory T976:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T977:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V3, V1) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T978:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T979:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T980:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T981:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V3, V2) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T982:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T983:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T984:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & neighbor(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V0 ~= V3) & (V1 ~= V2) & (V1 ~= V3) & (V2 ~= V3)) => false).
}

theory T985:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T986:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T987:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T988:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T989:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T990:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T991:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T992:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T993:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T994:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T995:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T996:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T997:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T998:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T999:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T1000:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T1001:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T1002:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T1003:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T1004:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T1005:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T1006:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T1007:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T1008:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T1009:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T1010:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T1011:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T1012:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T1013:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T1014:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T1015:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T1016:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T1017:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T1018:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T1019:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T1020:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T1021:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T1022:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T1023:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T1024:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T1025:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T1026:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T1027:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T1028:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T1029:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V1))).
}

theory T1030:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V2))).
}

theory T1031:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T1032:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V0, V2))).
}

theory T1033:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V1, V1))).
}

theory T1034:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V2, V1))).
}

theory T1035:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V1, V2))).
}

theory T1036:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V2, V2))).
}

theory T1037:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V1, V1))).
}

theory T1038:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V2, V1))).
}

theory T1039:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V1, V2))).
}

theory T1040:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V2, V2))).
}

theory T1041:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V1))).
}

theory T1042:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V1, V2))).
}

theory T1043:V {
	((neighbor(V0, V1) & neighbor(V2, V1) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V2))).
}

theory T1044:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & neighbor(V2, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T1045:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T1046:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T1047:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T1048:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T1049:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T1050:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T1051:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T1052:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T1053:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T1054:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T1055:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T1056:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T1057:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T1058:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T1059:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V1, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T1060:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & different(V3, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => false).
}

theory T1061:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V0)).
}

theory T1062:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V0)).
}

theory T1063:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V1)).
}

theory T1064:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V0)).
}

theory T1065:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V0, V2)).
}

theory T1066:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V0, V3)).
}

theory T1067:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V1)).
}

theory T1068:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V1)).
}

theory T1069:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V1, V2)).
}

theory T1070:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V1, V3)).
}

theory T1071:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => neighbor(V2, V2)).
}

theory T1072:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => color(V2, V3)).
}

theory T1073:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & color(V2, V3) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => different(V3, V3)).
}

theory T1074:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V0))).
}

theory T1075:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V1))).
}

theory T1076:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V0))).
}

theory T1077:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V0, V2))).
}

theory T1078:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V1))).
}

theory T1079:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V1))).
}

theory T1080:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V1, V2))).
}

theory T1081:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V0) | neighbor(V2, V2))).
}

theory T1082:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V0, V2))).
}

theory T1083:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V1, V1))).
}

theory T1084:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V2, V1))).
}

theory T1085:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V1, V2))).
}

theory T1086:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V2, V0) | neighbor(V2, V2))).
}

theory T1087:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V1, V1))).
}

theory T1088:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V2, V1))).
}

theory T1089:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V1, V2))).
}

theory T1090:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V0, V2) | neighbor(V2, V2))).
}

theory T1091:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V1))).
}

theory T1092:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V1, V2))).
}

theory T1093:V {
	((neighbor(V0, V1) & neighbor(V1, V2) & (V0 ~= V1) & (V0 ~= V2) & (V1 ~= V2)) => (neighbor(V1, V1) | neighbor(V2, V2))).
}

structure S0:V {
	Color = {Green; Red}
	Country = {Belgium; Poland; Germany}
	different = {(Green, Red); (Red, Green)}
	neighbor = {(Germany, Poland); (Germany, Belgium); (Poland, Germany); (Belgium, Germany)}
	color = {(Germany, Green); (Poland, Red); (Belgium, Red)}
}

procedure main() {
// Arguments
// 0: Theory
// 1: Structure

function isValid(t, s)
    stdoptions.nbmodels = 1 // Set to search for all models
    allsols = modelexpand(t, s) // Find all models

    local count = 0
    for _ in pairs(allsols) do count = count + 1 end

    if count ~= 1 then
    	return false
    else
    	// A model was found
    	return true
    end
end
if true and isValid(T0, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T2, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T3, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T4, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T5, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T6, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T7, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T8, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T9, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T10, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T11, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T12, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T13, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T14, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T15, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T16, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T17, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T18, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T19, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T20, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T21, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T22, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T23, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T24, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T25, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T26, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T27, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T28, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T29, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T30, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T31, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T32, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T33, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T34, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T35, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T36, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T37, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T38, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T39, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T40, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T41, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T42, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T43, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T44, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T45, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T46, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T47, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T48, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T49, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T50, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T51, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T52, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T53, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T54, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T55, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T56, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T57, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T58, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T59, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T60, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T61, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T62, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T63, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T64, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T65, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T66, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T67, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T68, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T69, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T70, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T71, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T72, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T73, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T74, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T75, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T76, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T77, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T78, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T79, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T80, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T81, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T82, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T83, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T84, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T85, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T86, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T87, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T88, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T89, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T90, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T91, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T92, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T93, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T94, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T95, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T96, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T97, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T98, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T99, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T100, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T101, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T102, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T103, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T104, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T105, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T106, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T107, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T108, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T109, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T110, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T111, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T112, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T113, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T114, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T115, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T116, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T117, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T118, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T119, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T120, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T121, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T122, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T123, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T124, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T125, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T126, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T127, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T128, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T129, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T130, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T131, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T132, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T133, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T134, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T135, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T136, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T137, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T138, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T139, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T140, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T141, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T142, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T143, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T144, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T145, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T146, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T147, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T148, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T149, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T150, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T151, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T152, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T153, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T154, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T155, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T156, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T157, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T158, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T159, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T160, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T161, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T162, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T163, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T164, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T165, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T166, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T167, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T168, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T169, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T170, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T171, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T172, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T173, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T174, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T175, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T176, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T177, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T178, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T179, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T180, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T181, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T182, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T183, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T184, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T185, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T186, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T187, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T188, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T189, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T190, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T191, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T192, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T193, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T194, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T195, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T196, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T197, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T198, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T199, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T200, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T201, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T202, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T203, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T204, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T205, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T206, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T207, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T208, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T209, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T210, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T211, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T212, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T213, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T214, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T215, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T216, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T217, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T218, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T219, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T220, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T221, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T222, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T223, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T224, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T225, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T226, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T227, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T228, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T229, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T230, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T231, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T232, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T233, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T234, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T235, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T236, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T237, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T238, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T239, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T240, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T241, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T242, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T243, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T244, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T245, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T246, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T247, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T248, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T249, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T250, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T251, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T252, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T253, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T254, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T255, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T256, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T257, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T258, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T259, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T260, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T261, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T262, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T263, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T264, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T265, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T266, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T267, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T268, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T269, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T270, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T271, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T272, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T273, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T274, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T275, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T276, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T277, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T278, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T279, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T280, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T281, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T282, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T283, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T284, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T285, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T286, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T287, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T288, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T289, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T290, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T291, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T292, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T293, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T294, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T295, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T296, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T297, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T298, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T299, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T300, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T301, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T302, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T303, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T304, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T305, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T306, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T307, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T308, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T309, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T310, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T311, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T312, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T313, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T314, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T315, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T316, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T317, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T318, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T319, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T320, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T321, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T322, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T323, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T324, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T325, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T326, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T327, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T328, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T329, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T330, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T331, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T332, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T333, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T334, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T335, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T336, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T337, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T338, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T339, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T340, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T341, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T342, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T343, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T344, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T345, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T346, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T347, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T348, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T349, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T350, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T351, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T352, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T353, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T354, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T355, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T356, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T357, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T358, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T359, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T360, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T361, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T362, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T363, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T364, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T365, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T366, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T367, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T368, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T369, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T370, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T371, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T372, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T373, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T374, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T375, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T376, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T377, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T378, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T379, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T380, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T381, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T382, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T383, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T384, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T385, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T386, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T387, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T388, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T389, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T390, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T391, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T392, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T393, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T394, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T395, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T396, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T397, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T398, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T399, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T400, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T401, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T402, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T403, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T404, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T405, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T406, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T407, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T408, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T409, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T410, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T411, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T412, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T413, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T414, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T415, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T416, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T417, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T418, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T419, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T420, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T421, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T422, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T423, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T424, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T425, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T426, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T427, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T428, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T429, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T430, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T431, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T432, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T433, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T434, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T435, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T436, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T437, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T438, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T439, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T440, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T441, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T442, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T443, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T444, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T445, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T446, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T447, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T448, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T449, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T450, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T451, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T452, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T453, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T454, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T455, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T456, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T457, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T458, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T459, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T460, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T461, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T462, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T463, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T464, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T465, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T466, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T467, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T468, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T469, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T470, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T471, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T472, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T473, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T474, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T475, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T476, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T477, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T478, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T479, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T480, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T481, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T482, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T483, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T484, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T485, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T486, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T487, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T488, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T489, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T490, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T491, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T492, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T493, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T494, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T495, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T496, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T497, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T498, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T499, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T500, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T501, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T502, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T503, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T504, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T505, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T506, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T507, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T508, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T509, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T510, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T511, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T512, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T513, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T514, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T515, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T516, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T517, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T518, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T519, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T520, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T521, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T522, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T523, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T524, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T525, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T526, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T527, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T528, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T529, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T530, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T531, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T532, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T533, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T534, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T535, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T536, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T537, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T538, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T539, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T540, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T541, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T542, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T543, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T544, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T545, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T546, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T547, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T548, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T549, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T550, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T551, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T552, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T553, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T554, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T555, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T556, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T557, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T558, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T559, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T560, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T561, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T562, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T563, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T564, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T565, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T566, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T567, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T568, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T569, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T570, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T571, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T572, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T573, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T574, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T575, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T576, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T577, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T578, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T579, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T580, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T581, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T582, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T583, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T584, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T585, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T586, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T587, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T588, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T589, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T590, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T591, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T592, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T593, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T594, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T595, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T596, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T597, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T598, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T599, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T600, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T601, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T602, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T603, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T604, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T605, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T606, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T607, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T608, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T609, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T610, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T611, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T612, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T613, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T614, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T615, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T616, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T617, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T618, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T619, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T620, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T621, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T622, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T623, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T624, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T625, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T626, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T627, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T628, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T629, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T630, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T631, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T632, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T633, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T634, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T635, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T636, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T637, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T638, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T639, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T640, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T641, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T642, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T643, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T644, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T645, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T646, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T647, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T648, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T649, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T650, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T651, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T652, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T653, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T654, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T655, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T656, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T657, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T658, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T659, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T660, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T661, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T662, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T663, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T664, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T665, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T666, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T667, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T668, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T669, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T670, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T671, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T672, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T673, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T674, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T675, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T676, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T677, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T678, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T679, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T680, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T681, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T682, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T683, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T684, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T685, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T686, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T687, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T688, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T689, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T690, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T691, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T692, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T693, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T694, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T695, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T696, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T697, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T698, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T699, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T700, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T701, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T702, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T703, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T704, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T705, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T706, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T707, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T708, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T709, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T710, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T711, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T712, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T713, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T714, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T715, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T716, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T717, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T718, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T719, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T720, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T721, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T722, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T723, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T724, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T725, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T726, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T727, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T728, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T729, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T730, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T731, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T732, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T733, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T734, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T735, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T736, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T737, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T738, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T739, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T740, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T741, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T742, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T743, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T744, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T745, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T746, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T747, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T748, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T749, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T750, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T751, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T752, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T753, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T754, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T755, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T756, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T757, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T758, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T759, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T760, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T761, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T762, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T763, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T764, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T765, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T766, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T767, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T768, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T769, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T770, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T771, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T772, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T773, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T774, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T775, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T776, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T777, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T778, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T779, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T780, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T781, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T782, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T783, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T784, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T785, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T786, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T787, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T788, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T789, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T790, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T791, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T792, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T793, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T794, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T795, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T796, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T797, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T798, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T799, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T800, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T801, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T802, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T803, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T804, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T805, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T806, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T807, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T808, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T809, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T810, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T811, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T812, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T813, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T814, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T815, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T816, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T817, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T818, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T819, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T820, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T821, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T822, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T823, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T824, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T825, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T826, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T827, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T828, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T829, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T830, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T831, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T832, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T833, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T834, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T835, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T836, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T837, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T838, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T839, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T840, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T841, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T842, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T843, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T844, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T845, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T846, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T847, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T848, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T849, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T850, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T851, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T852, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T853, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T854, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T855, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T856, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T857, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T858, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T859, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T860, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T861, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T862, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T863, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T864, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T865, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T866, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T867, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T868, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T869, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T870, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T871, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T872, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T873, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T874, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T875, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T876, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T877, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T878, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T879, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T880, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T881, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T882, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T883, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T884, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T885, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T886, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T887, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T888, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T889, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T890, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T891, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T892, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T893, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T894, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T895, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T896, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T897, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T898, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T899, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T900, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T901, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T902, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T903, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T904, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T905, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T906, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T907, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T908, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T909, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T910, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T911, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T912, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T913, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T914, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T915, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T916, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T917, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T918, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T919, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T920, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T921, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T922, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T923, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T924, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T925, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T926, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T927, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T928, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T929, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T930, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T931, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T932, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T933, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T934, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T935, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T936, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T937, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T938, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T939, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T940, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T941, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T942, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T943, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T944, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T945, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T946, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T947, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T948, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T949, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T950, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T951, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T952, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T953, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T954, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T955, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T956, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T957, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T958, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T959, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T960, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T961, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T962, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T963, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T964, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T965, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T966, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T967, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T968, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T969, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T970, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T971, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T972, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T973, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T974, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T975, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T976, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T977, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T978, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T979, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T980, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T981, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T982, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T983, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T984, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T985, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T986, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T987, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T988, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T989, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T990, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T991, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T992, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T993, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T994, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T995, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T996, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T997, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T998, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T999, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1000, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1001, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1002, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1003, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1004, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1005, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1006, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1007, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1008, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1009, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1010, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1011, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1012, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1013, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1014, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1015, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1016, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1017, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1018, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1019, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1020, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1021, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1022, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1023, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1024, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1025, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1026, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1027, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1028, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1029, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1030, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1031, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1032, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1033, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1034, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1035, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1036, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1037, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1038, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1039, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1040, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1041, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1042, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1043, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1044, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1045, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1046, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1047, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1048, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1049, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1050, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1051, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1052, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1053, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1054, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1055, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1056, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1057, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1058, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1059, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1060, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1061, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1062, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1063, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1064, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1065, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1066, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1067, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1068, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1069, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1070, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1071, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1072, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1073, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1074, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1075, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1076, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1077, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1078, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1079, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1080, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1081, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1082, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1083, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1084, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1085, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1086, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1087, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1088, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1089, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1090, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1091, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1092, S0) then
	print("YES")
else
	print("NO")
end
if true and isValid(T1093, S0) then
	print("YES")
else
	print("NO")
end
print("")
}